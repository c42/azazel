<Configuration>
  <CodeStyleSettings>
    <ExternalPath IsNull="False">
    </ExternalPath>
    <Sharing>SOLUTION</Sharing>
    <CSharp>
      <FormatSettings>
        <ANONYMOUS_METHOD_DECLARATION_BRACES>END_OF_LINE</ANONYMOUS_METHOD_DECLARATION_BRACES>
        <CASE_BLOCK_BRACES>END_OF_LINE</CASE_BLOCK_BRACES>
        <EMPTY_BLOCK_STYLE>TOGETHER_SAME_LINE</EMPTY_BLOCK_STYLE>
        <FORCE_FIXED_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FIXED_BRACES_STYLE>
        <FORCE_FOR_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FOR_BRACES_STYLE>
        <FORCE_FOREACH_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FOREACH_BRACES_STYLE>
        <FORCE_IFELSE_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_IFELSE_BRACES_STYLE>
        <FORCE_USING_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_USING_BRACES_STYLE>
        <FORCE_WHILE_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_WHILE_BRACES_STYLE>
        <INDENT_SIZE>4</INDENT_SIZE>
        <INVOCABLE_DECLARATION_BRACES>END_OF_LINE</INVOCABLE_DECLARATION_BRACES>
        <KEEP_BLANK_LINES_IN_CODE>1</KEEP_BLANK_LINES_IN_CODE>
        <KEEP_BLANK_LINES_IN_DECLARATIONS>1</KEEP_BLANK_LINES_IN_DECLARATIONS>
        <KEEP_USER_LINEBREAKS>False</KEEP_USER_LINEBREAKS>
        <MODIFIERS_ORDER IsNull="False">
          <Item>public</Item>
          <Item>protected</Item>
          <Item>internal</Item>
          <Item>private</Item>
          <Item>new</Item>
          <Item>abstract</Item>
          <Item>virtual</Item>
          <Item>override</Item>
          <Item>sealed</Item>
          <Item>static</Item>
          <Item>readonly</Item>
          <Item>extern</Item>
          <Item>unsafe</Item>
          <Item>volatile</Item>
        </MODIFIERS_ORDER>
        <OTHER_BRACES>END_OF_LINE</OTHER_BRACES>
        <SPACE_BEFORE_ATTRIBUTE_COLON>True</SPACE_BEFORE_ATTRIBUTE_COLON>
        <TYPE_DECLARATION_BRACES>END_OF_LINE</TYPE_DECLARATION_BRACES>
        <WRAP_LIMIT>157</WRAP_LIMIT>
      </FormatSettings>
      <UsingsSettings />
      <Naming2 />
    </CSharp>
    <VB>
      <FormatSettings>
        <INDENT_SIZE>4</INDENT_SIZE>
      </FormatSettings>
      <ImportsSettings />
      <Naming2 />
    </VB>
    <GenerateMemberBody />
    <Naming2>
      <ExceptionName IsNull="False">
      </ExceptionName>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Locals" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Parameters" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="TypesAndNamespaces" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="Interfaces" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="TypeParameters" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="MethodPropertyEvent" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="LocalConstants" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="PublicFields">
        <ExtraRule Prefix="" Suffix="" Style="AaBb" />
      </PredefinedRule>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AA_BB" ElementKind="Constants">
        <ExtraRule Prefix="" Suffix="" Style="AaBb" />
        <ExtraRule Prefix="" Suffix="" Style="aaBb" />
      </PredefinedRule>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="StaticReadonly">
        <ExtraRule Prefix="" Suffix="" Style="AaBb" />
      </PredefinedRule>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="EnumMember" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="Other" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="PrivateInstanceFields" />
      <PredefinedRule Inspect="True" Prefix="_" Suffix="" Style="aaBb" ElementKind="PrivateStaticFields" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="PrivateConstants">
        <ExtraRule Prefix="" Suffix="" Style="AA_BB" />
      </PredefinedRule>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="PrivateStaticReadonly">
        <ExtraRule Prefix="" Suffix="" Style="aaBb" />
      </PredefinedRule>
      <Abbreviation Text="FF" />
      <Abbreviation Text="WPF" />
      <Abbreviation Text="SHFILEINFO" />
      <Abbreviation Text="SH" />
    </Naming2>
  </CodeStyleSettings>
  <SharedSolutionTemplateManager>
    <LiveTemplates>
      <Template uid="1fea2159-c282-43f7-b324-917e37b89cbd" shortcut="todo" description="" text="//todo:$END$" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="Everywhere" minimumLanguageVersion="2.0" />
        </Context>
        <Categories>
          <Category name="Shared Solution Templates" />
        </Categories>
        <Variables />
        <CustomProperties />
      </Template>
    </LiveTemplates>
    <FileTemplates>
      <Template uid="04d38fb1-9e45-4aab-8549-443358f414d6" shortcut="Class" description="Test" text="using NUnit.Framework;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  [TestFixture]&#xD;&#xA;  public class $CLASS$ &#xD;&#xA;  {&#xD;&#xA;    test$END$&#xD;&#xA;  }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <ProjectLanguageContext language="CSharp" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
          <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Test" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
      <Template uid="19cc012c-37d3-4909-8392-395490f7b7ea" shortcut="Class" description="Exception" text="using System;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  public class $CLASS$ : Exception&#xD;&#xA;  {&#xD;&#xA;      public $CLASS$(string message) : base(message) {}&#xD;&#xA;      public $CLASS$(string message, Exception exception) : base(message, exception) {}&#xD;&#xA;  }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <ProjectLanguageContext language="CSharp" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
          <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Exception" />
          <Property key="Extension" value="cs" />
        </CustomProperties>
      </Template>
      <Template uid="e2ccf159-b674-4b56-9548-379e73079651" shortcut="Class" description="UI Item" text="using System.Windows.Automation;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  public class $CLASS$ : UIItem&#xD;&#xA;  {&#xD;&#xA;   public $CLASS$(AutomationElement automationElement) : base(automationElement){}&#xD;&#xA;  }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <ProjectLanguageContext language="CSharp" />
        </Context>
        <Categories>
          <Category name="UIAutomation" />
        </Categories>
        <Variables>
          <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
          <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Test" />
          <Property key="Extension" value="cs" />
        </CustomProperties>
      </Template>
      <Template uid="cddfdd09-8f01-4813-bb02-f34572d6397a" shortcut="" description="Test" text="using NUnit.Framework;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  [TestFixture]&#xD;&#xA;  public class $CLASS$ {&#xD;&#xA;    test$END$&#xD;&#xA;  }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <ProjectLanguageContext language="CSharp" />
        </Context>
        <Categories>
          <Category name="Test" />
        </Categories>
        <Variables>
          <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
          <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Class" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
    </FileTemplates>
  </SharedSolutionTemplateManager>
</Configuration>